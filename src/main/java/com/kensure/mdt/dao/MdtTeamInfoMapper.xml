<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kensure.mdt.dao.MdtTeamInfoMapper"><!--dsName="" saasAspect=""-->
	<!-- <cache readOnly="true"/> -->
    <sql id="allFields">
		id,
		team_id as teamId,
		user_id as userId,
		name,
		department,
		title,
		phone,
		phone_cornet as phoneCornet,
		specialist_type as specialistType,
		created_time as createdTime,
		updated_time as updatedTime
    </sql>
    
	<sql id="insertFields">
		id,
		team_id,
		user_id,
		name,
		department,
		title,
		phone,
		phone_cornet,
		specialist_type,
		created_time,
		updated_time
    </sql>
	
	<insert id="insert" parameterType="com.kensure.mdt.entity.MdtTeamInfo">
		insert into mdt_team_info (<include refid="insertFields"/>)
		values (
			#{id},
			#{teamId},
			#{userId},
			#{name},
			#{department},
			#{title},
			#{phone},
			#{phoneCornet},
			#{specialistType},
			#{createdTime},
			#{updatedTime}
		)
	</insert>	
	
    <sql id="whereClause">
		<if test="teamId != null">			
			team_id = #{teamId}			
		</if>
		<if test="userId != null">			
			and user_id = #{userId}			
		</if>
		<if test="name != null">			
			and name = #{name}			
		</if>
		<if test="department != null">			
			and department = #{department}			
		</if>
		<if test="title != null">			
			and title = #{title}			
		</if>
		<if test="phone != null">			
			and phone = #{phone}			
		</if>
		<if test="phoneCornet != null">			
			and phone_cornet = #{phoneCornet}			
		</if>
		<if test="specialistType != null">			
			and specialist_type = #{specialistType}			
		</if>
		<if test="createdTime != null">			
			and created_time = #{createdTime}			
		</if>
		<if test="updatedTime != null">			
			and updated_time = #{updatedTime}			
		</if>
	</sql>
    
	<select id="selectOne" resultType="com.kensure.mdt.entity.MdtTeamInfo" parameterType="Long" >
		select <include refid="allFields"/> 
		  from mdt_team_info 
		 where id = #{id} 
	</select>
	
	<select id="selectByIds" parameterType="List" resultType="com.kensure.mdt.entity.MdtTeamInfo">
		select <include refid="allFields"/> from mdt_team_info 
		where id in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</select>
	
	<select id="selectCountByWhere" parameterType="Map" resultType="Long">
		select count(*) from mdt_team_info 
		<where>
		    <include refid="whereClause"/>
		</where>
	</select>

	<select id="selectByWhere" parameterType="Map" resultType="com.kensure.mdt.entity.MdtTeamInfo">
		select <include refid="allFields"/>
		from mdt_team_info 
		<where>
		    <include refid="whereClause"/>
		</where>				
		<if test="orderby != null">
			ORDER BY ${orderby}
		</if>
		<if test="limit != null">
			LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>
	
	<sql id="setComn">		
		<if test="teamId != null">
			team_id = #{teamId},
		</if>
		<if test="userId != null">
			user_id = #{userId},
		</if>
		<if test="name != null">
			name = #{name},
		</if>
		<if test="department != null">
			department = #{department},
		</if>
		<if test="title != null">
			title = #{title},
		</if>
		<if test="phone != null">
			phone = #{phone},
		</if>
		<if test="phoneCornet != null">
			phone_cornet = #{phoneCornet},
		</if>
		<if test="specialistType != null">
			specialist_type = #{specialistType},
		</if>
		<if test="createdTime != null">
			created_time = #{createdTime},
		</if>
		<if test="updatedTime != null">
			updated_time = #{updatedTime}
		</if>
	</sql>
	
	<update id="update" parameterType="com.kensure.mdt.entity.MdtTeamInfo">
		 update mdt_team_info 
		    <set>
		    	<include refid="setComn"/>
			</set>
		  where id = #{id}
	</update>
	
	<update id="updateByMap" parameterType="Map">
		 update mdt_team_info 
		    <set>
		    	<include refid="setComn"/>
			</set>
		  where id = #{id}
	</update>
	
	<delete id="delete">
		delete from mdt_team_info where id = #{id}
	</delete>
	
	<delete id="deleteMulti" parameterType="List">
		delete from mdt_team_info
		where id in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>
	
	<delete id="deleteByWhere" parameterType="Map">
		delete from mdt_team_info 
		<where>
		    <include refid="whereClause"/>
		</where>
	</delete>	

</mapper>    
